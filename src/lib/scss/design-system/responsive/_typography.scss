// Responsive/_typography.scss
// Define responsive typography mixins using fluid typography with clamp()
@use 'sass:map';
@use '../utils/math/responsive-functions' as rf;
@use '../base/global-variables' as gv;

// Import typography token values
@use '../tokens/typography' as tokens;

// Fluid typography mixin using create-clamp function for font-size
@mixin fluid-type($min-size, $max-size, $min-viewport: 20rem, $max-viewport: gv.$PAGE_MAX_INLINE) {
	font-size: rf.create-clamp($min-size, $max-size, $min-viewport, $max-viewport);
}

// Responsive heading mixins using fluid typography
@mixin responsive-heading-1(
	$min-size: map-get(tokens.$font-size, '4xl'),
	$max-size: map-get(tokens.$font-size, '6xl')
) {
	font-weight: map-get(tokens.$font-weight, 'bold');
	line-height: map-get(tokens.$line-height, 'tight');
	@include fluid-type($min-size, $max-size);
}

@mixin responsive-heading-2(
	$min-size: map-get(tokens.$font-size, '3xl'),
	$max-size: map-get(tokens.$font-size, '5xl')
) {
	font-weight: map-get(tokens.$font-weight, 'bold');
	line-height: map-get(tokens.$line-height, 'tight');
	@include fluid-type($min-size, $max-size);
}

@mixin responsive-heading-3(
	$min-size: map-get(tokens.$font-size, '2xl'),
	$max-size: map-get(tokens.$font-size, '4xl')
) {
	font-weight: map-get(tokens.$font-weight, 'bold');
	line-height: map-get(tokens.$line-height, 'tight');
	@include fluid-type($min-size, $max-size);
}

@mixin responsive-heading-4(
	$min-size: map-get(tokens.$font-size, 'xl'),
	$max-size: map-get(tokens.$font-size, '3xl')
) {
	font-weight: map-get(tokens.$font-weight, 'semi-bold');
	line-height: map-get(tokens.$line-height, 'snug');
	@include fluid-type($min-size, $max-size);
}

@mixin responsive-heading-5(
	$min-size: map-get(tokens.$font-size, 'lg'),
	$max-size: map-get(tokens.$font-size, '2xl')
) {
	font-weight: map-get(tokens.$font-weight, 'semi-bold');
	line-height: map-get(tokens.$line-height, 'snug');
	@include fluid-type($min-size, $max-size);
}

@mixin responsive-heading-6(
	$min-size: map-get(tokens.$font-size, 'md'),
	$max-size: map-get(tokens.$font-size, 'xl')
) {
	font-weight: map-get(tokens.$font-weight, 'semi-bold');
	line-height: map-get(tokens.$line-height, 'normal');
	@include fluid-type($min-size, $max-size);
}

// Body text mixins
@mixin responsive-body-text(
	$min-size: map-get(tokens.$font-size, 'sm'),
	$max-size: map-get(tokens.$font-size, 'md')
) {
	font-weight: map-get(tokens.$font-weight, 'regular');
	line-height: map-get(tokens.$line-height, 'normal');
	@include fluid-type($min-size, $max-size);
}

@mixin responsive-body-text-large(
	$min-size: map-get(tokens.$font-size, 'md'),
	$max-size: map-get(tokens.$font-size, 'lg')
) {
	font-weight: map-get(tokens.$font-weight, 'regular');
	line-height: map-get(tokens.$line-height, 'normal');
	@include fluid-type($min-size, $max-size);
}

@mixin responsive-body-text-small(
	$min-size: map-get(tokens.$font-size, 'xs'),
	$max-size: map-get(tokens.$font-size, 'sm')
) {
	font-weight: map-get(tokens.$font-weight, 'regular');
	line-height: map-get(tokens.$line-height, 'normal');
	@include fluid-type($min-size, $max-size);
}

// Caption text
@mixin responsive-caption(
	$min-size: map-get(tokens.$font-size, '2xs'),
	$max-size: map-get(tokens.$font-size, 'xs')
) {
	font-weight: map-get(tokens.$font-weight, 'regular');
	line-height: map-get(tokens.$line-height, 'tight');
	@include fluid-type($min-size, $max-size);
}

// Button text
@mixin responsive-button-text(
	$min-size: map-get(tokens.$font-size, 'sm'),
	$max-size: map-get(tokens.$font-size, 'md')
) {
	font-weight: map-get(tokens.$font-weight, 'medium');
	line-height: map-get(tokens.$line-height, 'normal');
	@include fluid-type($min-size, $max-size);
}

// Helper mixin to generate custom fluid typography
@mixin custom-fluid-typography(
	$min-size,
	$max-size,
	$weight: 'regular',
	$line-height: 'normal',
	$min-viewport: 20rem,
	$max-viewport: gv.$PAGE_MAX_INLINE
) {
	font-weight: map-get(tokens.$font-weight, $weight);
	line-height: map-get(tokens.$line-height, $line-height);
	@include fluid-type($min-size, $max-size, $min-viewport, $max-viewport);
}
