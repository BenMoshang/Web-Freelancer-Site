@use 'spacing-maps' as sm;
@use '../../abstracts/math/responsive-functions' as math-fn;
@use 'sass:map';

@function get-static-sp($key) {
	@return map.get(sm.$static-spacing, $key);
}

@function get-base-sp($key) {
	@return map.get(sm.$spacing-scale, $key);
}

@function create-responsive-sp($min-size, $max-size) {
	$min: math-fn.get-map-value(sm.$spacing-scale, $min-size);
	$max: math-fn.get-map-value(sm.$spacing-scale, $max-size);
	@return math-fn.create-clamp($min, $max);
}

@function get-responsive-sp($key) {
	@return map.get(sm.$responsive-spacing, $key);
}

/**
 * Main spacing function.
 * If $static is true, returns a static spacing value; otherwise returns a responsive value.
 */
@function spacing($size, $static: false) {
	@if type-of($size) != 'string' {
		@error "Spacing size must be a string. Got: #{$size}";
	}
	@if $static == true {
		@return get-static-sp($size);
	}
	@return get-responsive-sp($size);
}
