@use 'sass:map';
@use 'sass:math';
@use 'typography-variables' as tv;
@use '../colors/colors-variables' as cv;


/*==================================
Other functions
======================================*/
/**
 * @function get-ff
 * @desc Retrieves font-family from $font-family map
 * @param {String} $font - 'primary' or 'secondary'
 * @return {String} font-family name
 */
@function get-ff($font) {
	@return map.get(tv.$font-family, $font);
}

/**
 * @function get-fw
 * @desc Retrieves font-weight from $font-weights map
 * @param {String} $weight - 'light','regular','medium','semibold','bold'
 * @return {Number} font-weight value
 */
@function get-fw($weight) {
	@return map.get(tv.$font-weights, $weight);
}

/**
 * @function get-lh
 * @desc Retrieves line-height from $line-heights map
 * @param {String} $height - 'tight','snug','normal','loose'
 * @return {Number} line-height multiplier
 */
@function get-lh($height) {
	@return map.get(tv.$line-heights, $height);
}

/**
 * @function get-ls
 * @desc Retrieves letter-spacing from $letter-spacing map
 * @param {String} $ls - 'tight','snug','normal','loose'
 * @return {Number/Length} letter-spacing value
 */
@function get-ls($ls) {
	@return map.get(tv.$letter-spacing, $ls);
}

/**
 * @function get-color
 * @desc Retrieves a color from $color-scale map
 * @param {String} $color - 'darkest','darker','dark','medium','light','lighter','lightest'
 * @return {Color} color value
 */
@function get-color($color) {
	@return map-get(cv.$color-scale, $color);
}
