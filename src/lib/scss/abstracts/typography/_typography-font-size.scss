@use 'sass:math';
@use '../../base/global-variables' as gv;
/* ---------------------------------------------------------------------------
   1) Global / Default Variables (REM Only)
   ---------------------------------------------------------------------------
   Adjust these to match your project's design system. We assume that 1rem
   typically corresponds to 16px, but we're NOT using px at all, so everything
   remains consistent in rem.
--------------------------------------------------------------------------- */
$typography-base-size: 1.125rem; // e.g., ~18px if 1rem=16px

$typography-scale-ratio: 1.414; // Classic typographic ratio (sqrt(2))

/* ---------------------------------------------------------------------------
   2) Typographic Scales (REM Values)
   ---------------------------------------------------------------------------

--------------------------------------------------------------------------- */
$typography-scales: (
	//label small
	'x1': math.div($typography-base-size, math.pow($typography-scale-ratio, 0.75)),
	'x2': math.div($typography-base-size, math.pow($typography-scale-ratio, 0.5)),
	//body
	//default
	'x3': $typography-base-size,
	'x4': $typography-base-size * math.pow($typography-scale-ratio, 0.5),
	'x5': $typography-base-size * math.pow($typography-scale-ratio, 1),
	'x6': $typography-base-size * math.pow($typography-scale-ratio, 1.5),
	'x7': $typography-base-size * math.pow($typography-scale-ratio, 2),
	'x8': $typography-base-size * math.pow($typography-scale-ratio, 2.5),
	'x9': $typography-base-size * math.pow($typography-scale-ratio, 3),
	//min for display
	'x10': $typography-base-size * math.pow($typography-scale-ratio, 3.5),
	'x11': $typography-base-size * math.pow($typography-scale-ratio, 4),
	'x12': $typography-base-size * math.pow($typography-scale-ratio, 7),
	'x13': $typography-base-size * math.pow($typography-scale-ratio, 8)
);

/* ---------------------------------------------------------------------------
   3) Static Font-Size Getter
   ---------------------------------------------------------------------------
   Retrieves a static size from $typography-scales, returning a REM value.
--------------------------------------------------------------------------- */
@function get-static-fsz($size) {
	$font-size: map-get($typography-scales, $size);

	@return $font-size;
}

/* ---------------------------------------------------------------------------
   4) Pure Clamp Function (REM-Only)
   ---------------------------------------------------------------------------
   This is a direct Marc Bacon-style function, but restricted to REM units.
   Pass in:
     - $min-size      (rem) e.g. 1rem
     - $max-size      (rem) e.g. 2rem
     - $min-viewport  (rem) e.g. 20rem  ( ~320px if 1rem=16px )
     - $max-viewport  (rem) e.g. 75rem  ( ~1200px if 1rem=16px )

   Returns:
     clamp($min-size, calc($intercept + $slope * 100vw), $max-size)

   Where:
     $slope     = (maxSize - minSize) / (maxVW - minVW)
     $intercept = minSize - slope * minVW
--------------------------------------------------------------------------- */
/*=============================================
=            for clamp             =
=============================================*/
$min-viewport: 20rem;
$max-viewport: 90rem;
@function clamp-size(
	$min-size,
	$max-size,
	$min-viewport: $min-viewport,
	$max-viewport: $max-viewport
) {
	$slope: math.div($max-size - $min-size, $max-viewport - $min-viewport);
	$intercept: $min-size - ($slope * $min-viewport);

	@return clamp($min-size, calc(#{$intercept} + #{$slope} * 100vw), $max-size);
}

/* ---------------------------------------------------------------------------
   5) Responsive Font-Size (From Scale + Clamp)
   ---------------------------------------------------------------------------
   Blends the typographic scale with the clamp approach:
   1) Fetch the smaller (min) and larger (max) font-sizes from the scale.
   2) Use clamp-size() to create the fluid clamp expression.
   3) Uses default $min-viewport / $max-viewport if not overridden.
--------------------------------------------------------------------------- */
@function get-fsz($min-key, $max-key, $min-vw: $min-viewport, $max-vw: $max-viewport) {
	$min-size: get-static-fsz($min-key);
	$max-size: get-static-fsz($max-key);

	@return clamp-size($min-size, $max-size, $min-vw, $max-vw);
}
