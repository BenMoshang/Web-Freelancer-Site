@use 'sass:math';
@use '../../base/global-variables' as gv;
@use '../math/responsive-functions' as math-fn;

/* ---------------------------------------------------------------------------
   1) Global / Default Variables (REM Only)
   ---------------------------------------------------------------------------
   Adjust these to match your project's design system.
--------------------------------------------------------------------------- */
$typography-base-size: 1rem;
$typography-scale-ratio: 1.25;

/* ---------------------------------------------------------------------------
   2) Typographic Scales (REM Values)
   ---------------------------------------------------------------------------
   Define your typographic scale using the base size and scale ratio.
--------------------------------------------------------------------------- */
$typography-scales: (
	'x-1': math.div($typography-base-size, math.pow($typography-scale-ratio, 1)),
	'x0.5': math.div($typography-base-size, math.pow($typography-scale-ratio, 0.5)),
	'x1': $typography-base-size,
	'x2': $typography-base-size * math.pow($typography-scale-ratio, 1),
	'x3': $typography-base-size * math.pow($typography-scale-ratio, 2),
	'x4': $typography-base-size * math.pow($typography-scale-ratio, 3),
	'x5': $typography-base-size * math.pow($typography-scale-ratio, 4),
	'x6': $typography-base-size * math.pow($typography-scale-ratio, 5),
	'x7': $typography-base-size * math.pow($typography-scale-ratio, 6),
	'x8': $typography-base-size * math.pow($typography-scale-ratio, 7),
	'x9': $typography-base-size * math.pow($typography-scale-ratio, 8),
	'x10': $typography-base-size * math.pow($typography-scale-ratio, 9),
	'x11': $typography-base-size * math.pow($typography-scale-ratio, 10),
	'x12': $typography-base-size * math.pow($typography-scale-ratio, 11),
	'x13': $typography-base-size * math.pow($typography-scale-ratio, 12)
);
$typography-scales: () !default;
/* ---------------------------------------------------------------------------
   3) Static Font-Size Getter
   ---------------------------------------------------------------------------
   Retrieves a static font size from the typographic scale and rounds it.
--------------------------------------------------------------------------- */
@function get-static-fsz($size) {
	$font-size: math-fn.get-map-value($typography-scales, $size);
	@return math-fn.round-number($font-size, 1); // Round to whole numbers for static sizes
}

/* ---------------------------------------------------------------------------
   4) Responsive Font-Size (From Scale + Clamp)
   ---------------------------------------------------------------------------
   Blends the typographic scale with the clamp approach:
     1) Retrieves the min and max sizes from the scale.
     2) Generates a fluid clamp expression using those values.
--------------------------------------------------------------------------- */
@function get-fsz($min-key, $max-key) {
	$min-size: get-static-fsz($min-key);
	$max-size: get-static-fsz($max-key);
	@return math-fn.create-clamp($min-size, $max-size);
}
