@use 'typography-functions' as tf;
@use 'typography-font-size' as fsz;
@use '../colors/colors-functions' as cf;
@use '../colors/colors-variables' as cv;
@use '../../base/animations/text/typography-animations' as ta;
@use 'typography-variables' as tv;
@use 'sass:map';

$responsive-font-size: (
	'display--h1': fsz.get-fsz('x7', 'x13'),
	'display--h2': fsz.get-fsz('x10', 'x12'),
	'heading--h2': fsz.get-fsz('x8', 'x9'),
	'heading--h3': fsz.get-fsz('x4', 'x7'),
	'heading--h4': fsz.get-fsz('x4', 'x5'),
	'body--lg': fsz.get-fsz('x4', 'x5'),
	'body--md': fsz.get-fsz('x3', 'x4'),
	'label': fsz.get-fsz('x1', 'x2')
);
@function get-fsz-range($key) {
	@if map-has-key($responsive-font-size, $key) {
		@return map.get($responsive-font-size, $key);
	} @else {
		@error "Key '#{$key}' not found in $responsive-font-size map";
		@return null;
	}
}

@mixin new-order {
	font-family: tf.get-ff('display');
	text-rendering: geometricPrecision;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin roboto {
	font-family: tf.get-ff('body');
	text-rendering: geometricPrecision;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
@mixin max-ch-inline-size($type) {
	@if $type == 'display' {
		max-inline-size: 35ch;
	} @else if $type == 'heading' {
		max-inline-size: 45ch;
	} @else if $type == 'body' {
		max-inline-size: 65ch;
	} @else {
		@error "Invalid type '#{$type}'. Must be 'display', 'heading', or 'body'";
	}
}

@mixin display-overview {
	@include new-order;
	font-family: tf.get-ff('display');
	font-weight: tf.get-fw('display');
	line-height: tf.get-lh('tight');
	letter-spacing: tf.get-ls('tight');
	color: cf.get-light-dark('darkest', 'lightest');

	text-wrap: balance;
}

@mixin heading-overview {
	@include roboto;
	font-family: tf.get-ff('heading');
	font-weight: tf.get-fw('heading');
	line-height: tf.get-lh('snug');
	letter-spacing: tf.get-ls('snug');
	color: cf.get-light-dark('darker', 'lighter');

	text-wrap: balance;
}

@mixin body-overview {
	@include roboto;
	font-family: tf.get-ff('body');
	font-weight: tf.get-fw('body');
	line-height: tf.get-lh('normal');
	letter-spacing: tf.get-ls('normal');
	color: cf.get-light-dark('dark', 'light');

	text-wrap: pretty;
	max-inline-size: 65ch;
}

@mixin label-overview {
	@include roboto;
	font-family: tf.get-ff('secondary');
	font-weight: 400;
	font-size: map.get($responsive-font-size, 'label');
	line-height: tf.get-lh('loose');
	letter-spacing: tf.get-ls('loose');
	color: cf.get-light-dark('light', 'light');

	text-transform: uppercase;
	text-wrap: balance;
}

/*=============================================
=            Display Typography              =
=============================================*/

%global__display--h1 {
	@include display-overview;
	font-size: map.get($responsive-font-size, 'display--h1');
	text-align: center;
	text-wrap: balance;
}

%global__display--h2 {
	@include display-overview;
	font-size: map.get($responsive-font-size, 'display--h2');
	text-align: center;
}

/*=============================================
=            Heading Typography              =
=============================================*/

%global__heading--h2 {
	@include heading-overview;
	color: cf.get-light-dark('darker', 'lighter');
	font-size: map.get($responsive-font-size, 'heading--h2');
}

%global__heading--h3 {
	@include heading-overview;
	color: cf.get-light-dark('darker', 'lighter');

	font-size: map.get($responsive-font-size, 'heading--h3');
}

%global__heading--h4 {
	@include heading-overview;
	color: cf.get-light-dark('darker', 'lighter');

	font-size: map.get($responsive-font-size, 'heading--h4');
}

/*=============================================
=            Body Typography                 =
=============================================*/

%global__body--lg {
	@include body-overview;

	font-size: map.get($responsive-font-size, 'body--lg');
}

%global__body--md {
	@include body-overview;

	font-size: map.get($responsive-font-size, 'body--md');
}

/*=============================================
=            Label Typography                =
=============================================*/
%global__label {
	@include label-overview;
}
