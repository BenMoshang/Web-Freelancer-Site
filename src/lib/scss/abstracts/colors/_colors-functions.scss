@use 'colors-variables' as cv;

@function get-light-dark($color1, $color2, $scale: cv.$color-scale) {
	$selected-scale: if($scale == 'primary', cv.$color-primary-scale, cv.$color-scale);

	$light: map-get($selected-scale, $color1);
	$dark: map-get($selected-scale, $color2);

	@return light-dark($light, $dark);
}
@function get-color-with-lightness($color1, $color2, $lightness-value) {
	$base-color: light-dark($color1, $color2);
	@return hsl(hue($base-color), saturation($base-color), $lightness-value);
}
@mixin gradient-text(
	$dark-start: map-get(cv.$color-primary-scale, 'darker'),
	$dark-end: map-get(cv.$color-primary-scale, 'lightest'),
	$light-start: map-get(cv.$color-scale, 'darker'),
	$light-end: map-get(cv.$color-scale, 'lightest'),
	$direction: 360deg,
	$fallback-color: currentColor
) {
	// Define CSS custom properties for theme-aware gradients
	--gradient-start: #{$dark-start};
	--gradient-end: #{$dark-end};
	--gradient-direction: #{$direction};
	--gradient-fallback: #{$fallback-color};

	// Set up the gradient background
	background: linear-gradient(
		var(--gradient-direction),
		var(--gradient-start),
		var(--gradient-end)
	);

	// Apply text properties
	color: var(--gradient-fallback); // Fallback
	-webkit-text-fill-color: transparent;
	background-clip: text;
	-webkit-background-clip: text;

	// Theme-specific gradient colors
	[data-theme='dark'] & {
		--gradient-start: #{$dark-start};
		--gradient-end: #{$dark-end};
	}

	[data-theme='light'] & {
		--gradient-start: #{$light-start};
		--gradient-end: #{$light-end};
	}

	// Ensure proper rendering in Firefox
	@-moz-document url-prefix() {
		background-clip: text;
	}
}
