@use '../../abstracts/spacing/page/page-grid' as pg;
@use '../../abstracts/spacing/spacing-functions' as sf;
@use '../../base/animations/hover/hover-animations' as ha;
@use '../../abstracts/colors/colors-functions' as cf;
@use '../../abstracts/typography' as typo;
@use '../../base/global-variables' as gv;
@use '../../base/shadows/shadows' as sh;

@mixin button-overview {
	@include ha.button-effect;
	// Optional: @include shadow-high('darkest', 'lightest');
	position: relative;
	overflow: hidden;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: sf.get-static-sp('xs');
	inline-size: fit-content;
	padding-block: sf.get-static-sp('sm');
	padding-inline: sf.get-static-sp('md');
	border-radius: gv.$br-default;
	background: cf.get-light-dark('800', '200');
	font-family: typo.get-ff('body');
	font-weight: typo.get-fw('heading');
	font-size: typo.get-static-fsz('x2');
	line-height: 1;
	color: cf.get-light-dark('50', '900'); //because svg is on current color!important keep here

	& svg {
		--icon-size: 1em;
		display: block;
		color: inherit;
		object-fit: cover;
		block-size: var(--icon-size);
		inline-size: var(--icon-size);
	}
}

@mixin button-primary($small: false) {
	@include button-overview;
	border: 0.0625rem solid cf.get-light-dark('900', '50');
	background: cf.get-light-dark('900', '50');
	display: block;

	font-family: typo.get-ff('body');
	font-weight: typo.get-fw('display');
}
// Optimized CTA Button SCSS Mixin
// Parameters allow for theme adjustments without modifying the mixin.
@mixin cta-styles(
	$color: cf.get-light-dark('900', '50'),
	// Primary color for text and underline
	$underline-height: 0.125rem,
	// Underline thickness
	$underline-duration: 0.25s,
	// Duration of underline transition
	$underline-padding-bottom: 20px,
	// Additional padding for underline effect
	$svg-initial-offset: -8px,
	// Initial translateX offset for the svg
	$svg-transition-duration: 0.3s // Transition duration for the svg
) {
	// Base button styles
	border: none;
	background: none;
	cursor: pointer;
	width: fit-content;

	// Text styles for span elements inside the button
	& span {
		@include typo.body-overview;
		padding-bottom: 7px;
		letter-spacing: 4px;
		font-size: 14px;
		padding-right: 15px;
		text-transform: uppercase;

		// Underline animation specific styles
		&.hover-underline-animation {
			position: relative;
			color: $color;
			padding-bottom: $underline-padding-bottom;

			// Underline effect using pseudo-element
			&:after {
				content: '';
				position: absolute;
				width: 100%;
				height: $underline-height;
				bottom: 0;
				left: 0;
				background-color: $color;
				transform: scaleX(0);
				transform-origin: bottom right;
				transition: transform $underline-duration ease-out;
			}
		}
	}

	// SVG styles within the button
	svg {
		fill: currentColor;
		transform: translateX($svg-initial-offset);
		transition: transform $svg-transition-duration ease;
	}

	// Hover state for interactive animations
	&:hover {
		svg {
			transform: translateX(0);
		}
		span.hover-underline-animation {
			&:after {
				transform: scaleX(1);
				transform-origin: bottom left;
			}
		}
	}

	// Active state for a pressed button effect
	&:active {
		svg {
			transform: scale(0.9);
		}
	}
}
